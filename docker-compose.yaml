version: '3.8'

services:

  nginx:
    build: ./nginx
    container_name: ${PROJECT_SLUG}_nginx
    volumes:
      - static_dir:/opt/backend/static/
      - media_dir:/opt/backend/media/
    ports:
      - "80:80"
    depends_on:
      - web
    networks:
      - nginx_network

  web:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ${PROJECT_SLUG}_app
    working_dir: /opt/backend
    volumes:
      - static_dir:/opt/backend/static/
      - media_dir:/opt/backend/media/
      - .:/backend
    env_file:
      - .env
    depends_on:
      - db
    networks:
      - nginx_network


  db:
    image: postgres:latest
    container_name: ${PROJECT_SLUG}_db
    volumes:
      - pgdata:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    networks:
      - nginx_network

  redis:
    image: redis:6.2.6
    networks:
      - nginx_network

  bot:
    build:
      context: ./telegram_bot
      dockerfile: Dockerfile
    working_dir: /opt/telegram_bot
    restart: always
    env_file:
      - .env
    networks:
      - nginx_network

  celery:
    command: celery -A config.celery worker --loglevel=info
    env_file:
      - .env
    volumes:
      - ./backend/:/backend/:rw
    depends_on:
      - db
      - redis
    networks:
      - nginx_network

  celery_beat:
    command: celery -A config.celery beat --loglevel=info
    env_file:
      - .env
    volumes:
      - ./backend/:/backend/:rw
    depends_on:
       - db
       - redis
    networks:
      - nginx_network



volumes:
  static_dir:
  media_dir:
  pgdata:

networks:
  nginx_network: